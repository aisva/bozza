{
	"info": {
		"_postman_id": "9e1edb50-edb8-44a0-b876-64edc04ac0ca",
		"name": "Bozza",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ab8e819-8430-4e0c-b22e-ecaced54b6c7",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body contains token\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"token\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"usertest\",\n\t\"password\": \"password.1\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/users",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d5314ca-151e-4360-bfd8-fb7d66411058",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body contains token\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"var jsonResponse = JSON.parse(pm.response.text());",
									"pm.collectionVariables.set(\"authToken\", jsonResponse.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"usertest\",\n\t\"password\": \"password.1\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/users/signin",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"users",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a04d5962-bca6-410a-b31d-f9065cdc77c3",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"currentPassword\": \"password.1\",\n\t\"newPassword\": \"password.2\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/users",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cc8f5e1-aaa1-431b-9c30-563954ca91ef",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/{{version}}/users",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ce2b42d4-8cc5-4f30-a6ed-e7f0f303c3fd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "efb16c49-3866-4241-97d1-360ad72736d8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Items",
			"item": [
				{
					"name": "Create item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5f71c35-c925-4f82-9395-0a6e09f21714",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body contains item\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"item\");",
									"});",
									"",
									"pm.test(\"Response body contains text\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"text\");",
									"});",
									"",
									"pm.test(\"Response body contains dueDate\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"dueDate\");",
									"});",
									"",
									"var jsonResponse = JSON.parse(pm.response.text());",
									"pm.collectionVariables.set(\"itemId\", jsonResponse.item.itemId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua.\",\n\t\"dueDate\": \"2020-02-11T16:31:06.158Z\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bceba334-85c6-4b76-a5e5-54ae0128e423",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body contains items\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"items\");",
									"});",
									"",
									"pm.test(\"Response body contains text\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"text\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items?",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items"
							],
							"query": [
								{
									"key": "filter",
									"value": "task",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get items (tasks)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "126f0502-923b-4740-9865-a587df2d8002",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body contains items\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"items\");",
									"});",
									"",
									"pm.test(\"Response body contains text\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"text\");",
									"});",
									"",
									"pm.test(\"Response body contains dueDate\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"dueDate\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items?filter=task",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items"
							],
							"query": [
								{
									"key": "filter",
									"value": "task"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update item (only text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a4ff8df-5dd5-48d6-820c-dd471afced50",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"Quis aute iure reprehenderit in voluptate velit esse cillum\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items/{{itemId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items",
								"{{itemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update item (text and dueDate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "614addfe-d1e2-4d40-86f3-439819094d2e",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"Quis aute iure reprehenderit in voluptate velit esse cillum\",\n\t\"dueDate\": \"2020-02-11T16:31:06.158Z\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items/{{itemId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items",
								"{{itemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update item (remove dueDate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a9313b3-c7f0-462a-bf79-e1e248dfe344",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"Quis aute iure reprehenderit in voluptate velit esse cillum\",\n\t\"dueDate\": \"\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items/{{itemId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items",
								"{{itemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate attachment URLs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca610c83-61ac-400d-8b23-3ffe3584ef5d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response body contains uploadUrl\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"uploadUrl\");",
									"});",
									"",
									"pm.test(\"Response body contains downloadUrl\", function () {",
									"   pm.expect(pm.response.text()).to.include(\"downloadUrl\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items/{{itemId}}/attachment",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items",
								"{{itemId}}",
								"attachment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f224d08-8dbb-4094-9dc6-f2902768da2d",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/{{version}}/items/{{itemId}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"{{version}}",
								"items",
								"{{itemId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2e83c0fe-6650-44d5-a90f-4c27ff720d83",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "977c227e-2df3-42eb-9a48-ec25e2f7eeae",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "8bb1a68d-28f5-4004-b2eb-554d07f6aede",
			"key": "apiUrl",
			"value": "http://localhost:3003",
			"type": "string"
		},
		{
			"id": "c1d6500f-1971-412b-a39f-c668cdeea203",
			"key": "version",
			"value": "v1",
			"type": "string"
		},
		{
			"id": "34b64981-f48f-429c-90ac-badd11753331",
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "609ac3a4-ea16-40f0-8f6f-e14b8970be85",
			"key": "itemId",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}